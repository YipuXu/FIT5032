Instructions
SUBMISSIONS DUE (Moodle): 
Basic Application Development (Version 1) Friday, 29 August 2025, 11:55 PM
Instructions
Read the Assessment Overview comprehensively.
Create and submit a web application that fulfills Business Requirements A and B.
1. Download the submission template: 
https://docs.google.com/document/d/1CK74KAn2gZS8U54IO4U_ELr-0gdLBGvOWlZh6QgRIfU/copy
2. Make sure to share your github repository with your tutor as soon as you start your A1.2 project.
What to submit in Moodle? 
A zip file containing: 
A basic application (version 1) completing Business Requirements A and B. 
Filled in copy of the submission template
Note: We will be checking your Github commit history for coding assignments. 
A penalty (up to 20%) will be applied to submissions where: 
the student has not shared a Github project repository with the tutor, OR
The Github repository contains less than 3 code commits. 
All commits have been done within a <48 hour period
Grading Level
(You shall only proceed to do next grade level when all your previous level has reached exceeds expectations	Criteria	Exceeds Expectations	Meets Expectations	Needs Improvement	Fail to Meet Expectations
P - P+	BR (A.1): Development Stack
and Coding	The web application is developed using the latest version of Vue.JS (3.x) and demonstrates a strong understanding of the framework's core concepts and features. The code is well-structured, modular, and follows best practices.	The web application is developed using Vue.JS 3, but the implementation may lack some advanced features or best practices. The code is functional but could be improved in terms of structure and organization.	The web application is not developed using Vue.JS 3 or the implementation is significantly flawed, lacking key features or best practices.	The Vue.js 3 framework is not used, or its implementation is severely flawed.
BR (A.2): Responsiveness	The web application is highly responsive and adapts seamlessly to various device sizes and screen resolutions.
All UI elements, layout, and functionality are optimized for both desktop and mobile experiences. (Which can fit for situations that has screen pixels less than 576px, between 576px to 768px
, between 992px to 1200px and bigger than 1400px)	The web application is generally responsive, but there may be some minor issues or inconsistencies in the layout and functionality across different devices. (Which can fit for situations that has screen pixels less than 576px and bigger than 1400px)	The web application lacks responsiveness, and the user experience is significantly compromised on different devices. (Which can fit for situations that has screen pixels bigger than 1400px)	The web application lacks responsiveness and does not work well on different devices and screen sizes at all
P+ - P++	BR (B.1): Validations	The web application implements a comprehensive set of user input validations, including at least two different types (e.g., required fields, email format, number range, etc.). The validations are well-designed, provide clear feedback to the user, and enhance the overall user experience.	The web application implements at least two different types of user input validations, but the implementation may have some minor issues or lack in providing clear feedback to the user.	The web application lacks or has significant issues with the implementation of user input validations (both at client and server-side), compromising the overall user experience.	The web application does not implement any user input validations.
BR (B.2): Dynamic Data & Data Structure	The web application seamlessly fetches and displays dynamic data from underlying JavaScript data structures (e.g., fetched from JSON, state variables, or Vue binding). The data is presented in a clear and intuitive manner, enhancing the user experience.	The web application fetches and displays dynamic data from internal JS data structures, but the implementation may have some minor issues or lack in providing a smooth user experience.	The web application fails to fetch or display dynamic data from internal JS data structures correctly, or the implementation is significantly flawed, compromising the user experience.	The web application does not dynamically fetch or display any data and contains hard coded data